generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "file:./dev.db"
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String @unique
  password String
  resetPasswordToken String
  validateEmailToken String
  isEmailValidated Boolean
  name String
  feeds Feeds[] @relation(fields: [feedsId], references: [id])
  feedsId Int
  billingPlan BillingPlan[] @relation(fields: [bilingPlanId], references: [id])
  bilingPlanId Int
}

// this is a model for a personal rss
// "Feeds" to "User" is many to many, cause user can share his Feeds
model Feeds {
  id Int @id @default(autoincrement())
  name String
  source Source[] @relation(fields: [sourceId], references: [id])
  sourceId Int
  user User[]
}

// this is a model where news was created (publisher)
// "Feeds" to "Source" is many to many, cause user can add the same source
//  to the different Feeds
model Source {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  article Article @relation(fields: [articleId], references: [id])
  articleId Int
  feeds Feeds[]
}

// this is a model of one Article(a News)
// "Source" to "Article" is many to many, cause Source have many Article, 
//  and one Article can be published in different Sources
model Article {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  author Author @relation(fields: [authorId], references: [id])
  authorId Int
  linkToWebSite String
  source Source[]
}

// this is a model of one Author
// "Article" to "Author" is many to many, cause Article may be written by many Authors
//  and one Author may write many Articles
model Author {
  id Int @id @default(autoincrement())
  name String
  article Article[]
}

// this is an enum for billing
enum BillingName {
  Free
  Pro
  ProPlus
  Enterprise
}

// this is a model of one Author
// "User" to "BillingPlan" is many to many, cause User may have different billing plans
//  and one billing plan may use different users
model BillingPlan {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name BillingName
  price Int
  // "features" - it is a difference between different billing plans
  features String
  user User[]
}

